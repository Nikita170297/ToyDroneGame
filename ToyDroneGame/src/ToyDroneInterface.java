
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Admin
 */
public class ToyDroneInterface extends javax.swing.JFrame {

    /**
     * Creates new form ToyDroneInterface
     */
    public ToyDroneInterface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        area = new javax.swing.JPanel();
        drone = new javax.swing.JLabel();
        Report = new javax.swing.JButton();
        Place = new javax.swing.JButton();
        Move = new javax.swing.JButton();
        Left = new javax.swing.JButton();
        Right = new javax.swing.JButton();
        Attack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Toy Drone Game");

        jPanel1.setBackground(new java.awt.Color(255, 102, 102));

        area.setBackground(new java.awt.Color(255, 255, 255));
        area.setName("area"); // NOI18N
        area.setPreferredSize(new java.awt.Dimension(500, 500));

        drone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Up.png"))); // NOI18N

        javax.swing.GroupLayout areaLayout = new javax.swing.GroupLayout(area);
        area.setLayout(areaLayout);
        areaLayout.setHorizontalGroup(
            areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(areaLayout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(drone)
                .addContainerGap(311, Short.MAX_VALUE))
        );
        areaLayout.setVerticalGroup(
            areaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(areaLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(drone)
                .addContainerGap(206, Short.MAX_VALUE))
        );

        Report.setBackground(new java.awt.Color(255, 255, 255));
        Report.setIcon(new javax.swing.ImageIcon(getClass().getResource("/reportIcon.png"))); // NOI18N
        Report.setText("Report");
        Report.setBorderPainted(false);
        Report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReportActionPerformed(evt);
            }
        });

        Place.setBackground(new java.awt.Color(255, 255, 255));
        Place.setIcon(new javax.swing.ImageIcon(getClass().getResource("/placeIcon.png"))); // NOI18N
        Place.setText("Place");
        Place.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlaceActionPerformed(evt);
            }
        });

        Move.setBackground(new java.awt.Color(255, 255, 255));
        Move.setIcon(new javax.swing.ImageIcon(getClass().getResource("/moveIcon.jpg"))); // NOI18N
        Move.setText("Move");
        Move.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MoveActionPerformed(evt);
            }
        });

        Left.setBackground(new java.awt.Color(255, 255, 255));
        Left.setIcon(new javax.swing.ImageIcon(getClass().getResource("/leftIcon.png"))); // NOI18N
        Left.setText("Left");
        Left.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LeftActionPerformed(evt);
            }
        });

        Right.setBackground(new java.awt.Color(255, 255, 255));
        Right.setIcon(new javax.swing.ImageIcon(getClass().getResource("/rightIcon.png"))); // NOI18N
        Right.setText("Right");
        Right.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RightActionPerformed(evt);
            }
        });

        Attack.setBackground(new java.awt.Color(255, 255, 255));
        Attack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/attackIcon.png"))); // NOI18N
        Attack.setText("Attack");
        Attack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(Report)
                .addGap(18, 18, 18)
                .addComponent(Place)
                .addGap(18, 18, 18)
                .addComponent(Move)
                .addGap(18, 18, 18)
                .addComponent(Left)
                .addGap(33, 33, 33)
                .addComponent(Right)
                .addGap(32, 32, 32)
                .addComponent(Attack)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(area, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Report, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Place, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Left, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Attack, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Right, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Move))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReportActionPerformed
        // TODO add your handling code here:
        int x=0;
        int y=0;
        
        x=drone.getX();
        y=drone.getY();
        
        String filename=drone.getIcon().toString();
        String file=filename.substring(filename.lastIndexOf("/")+1);
        if (file.equalsIgnoreCase("Down.png")){
            JOptionPane.showMessageDialog(rootPane, "X co-ordinate: "+x+"\nY co-ordinate: "+y+"\nDirection: East","Report",HEIGHT);
        }else if(file.equalsIgnoreCase("Up.png")){
            JOptionPane.showMessageDialog(rootPane, "X co-ordinate: "+x+"\nY co-ordinate: "+y+"\nDirection: West","Report",HEIGHT);
        }else if(file.equalsIgnoreCase("Left.png")){
            JOptionPane.showMessageDialog(rootPane, "X co-ordinate: "+x+"\nY co-ordinate: "+y+"\nDirection: South","Report",HEIGHT);
        }else if(file.equalsIgnoreCase("Right.png")){
            JOptionPane.showMessageDialog(rootPane, "X co-ordinate: "+x+"\nY co-ordinate: "+y+"\nDirection: North","Report",HEIGHT);
        }
        //JOptionPane.showMessageDialog(Left, file);
    }//GEN-LAST:event_ReportActionPerformed

    private void PlaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlaceActionPerformed
        // TODO add your handling code here:
        int xP=area.getHeight();
        int yP=area.getWidth();
        String input=JOptionPane.showInputDialog(rootPane, "Enter X and Y co-ordinates and direction (seperated by a comma)");
        
        String [] in =input.split(",");
        int x=0,y=0;
        String direction="";
        
        try{
            direction=in[2];
        }catch(ArrayIndexOutOfBoundsException e){
            String filename=drone.getIcon().toString();
            String file=filename.substring(filename.lastIndexOf("/")+1);
            direction=file;
        }
        
        try{
            x=Integer.parseInt(in[0]);
            y=Integer.parseInt(in[1]);
            
            if(x<=-1 || y<=-1 || x>xP || y>yP){
                JOptionPane.showMessageDialog(rootPane, "Can not move to that location!","Out of bounds!",HEIGHT);
            }else if(direction.equalsIgnoreCase("South")){
                drone.setLocation(x, y);
                drone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Left.png")));
            }else if(direction.equalsIgnoreCase("North")){
                drone.setLocation(x, y);
                drone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Right.png")));
            }else if(direction.equalsIgnoreCase("East")){
                drone.setLocation(x, y);
                drone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Down.png")));
            }else if(direction.equalsIgnoreCase("West")){
                drone.setLocation(x, y);
                drone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Up.png")));
            }else{
                drone.setLocation(x, y);
            }
        }catch(ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(rootPane, "Please input X and Y co-ordinates!","Error!",HEIGHT);
        }
    }//GEN-LAST:event_PlaceActionPerformed

    private void MoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MoveActionPerformed
        // TODO add your handling code here:
        int x=drone.getX();
        int y=drone.getY();
        
        int xP=area.getHeight();
        int yP=area.getWidth();
        
        String filename=drone.getIcon().toString();
        String file=filename.substring(filename.lastIndexOf("/")+1);
        
        if(x==0 && y==0 && (file.equalsIgnoreCase("Up.png"))||(file.equalsIgnoreCase("Left.png"))){
            JOptionPane.showMessageDialog(rootPane, "Can not move!","Error!",HEIGHT);
        }else if(file.equalsIgnoreCase("Down.png") && y+1<yP){
            drone.setLocation(x, y+1);
        }else if(file.equalsIgnoreCase("Up.png") && y-1>-1){
            drone.setLocation(x, y-1);
        }else if((file.equalsIgnoreCase("Right.png")) || (file.equalsIgnoreCase("Left.png")) && x+1<xP){
            drone.setLocation(x+1, y);
        }else{
             JOptionPane.showMessageDialog(rootPane, "Can not move!","Error!",HEIGHT);
        }
    }//GEN-LAST:event_MoveActionPerformed

    private void LeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LeftActionPerformed
        // TODO add your handling code here:
        String filename=drone.getIcon().toString();
        String file=filename.substring(filename.lastIndexOf("/")+1);
        
        if(file.equalsIgnoreCase("Right.png")){
             drone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Up.png")));
        }else if(file.equalsIgnoreCase("Down.png")){
             drone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Right.png")));
        }else if(file.equalsIgnoreCase("Left.png")){
             drone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Down.png")));
        }else{
             drone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Left.png")));
        }
    }//GEN-LAST:event_LeftActionPerformed

    private void RightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RightActionPerformed
        // TODO add your handling code here:
        String filename=drone.getIcon().toString();
        String file=filename.substring(filename.lastIndexOf("/")+1);
        
        if(file.equalsIgnoreCase("Left.png")){
             drone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Up.png")));
        }else if(file.equalsIgnoreCase("Down.png")){
             drone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Left.png")));
        }else if(file.equalsIgnoreCase("Right.png")){
             drone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Down.png")));
        }else{
             drone.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Right.png")));
        }
    }//GEN-LAST:event_RightActionPerformed

    private void AttackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttackActionPerformed
        // TODO add your handling code here:
        int xP=area.getHeight();
        int yP=area.getWidth();
       
        int x=drone.getX();
        int y=drone.getY();
       
        int xA=x+2;
        int yA=y+2;
       
        String filename=drone.getIcon().toString();
        String file=filename.substring(filename.lastIndexOf("/")+1);
       
        if((file.equalsIgnoreCase("Left.png"))){
            if(x>=2 && y>=0){
                JOptionPane.showMessageDialog(rootPane, "Attack Successful\n The co ordintes of the drone are: X-"+x+" , Y-"+y+"\nThe cordinates of the missile launched are: X- "+xA+" , Y-"+yA+"\nThe boundaries are: X-"+xP+", Y-"+yP);
            }else{
               JOptionPane.showMessageDialog(rootPane, "Attack Unsuccessful\n The co ordintes of the drone are: X-"+x+" , Y-"+y+"\nThe cordinates of the missile launched are: X- "+xA+" , Y-"+yA+"\nThe boundaries are: X-"+xP+", Y-"+yP);
            }
        }else if(file.equalsIgnoreCase("Right.png")){
            if(x==0 || x==xP || y==yP ||y==0){
                JOptionPane.showMessageDialog(rootPane, "Attack Unsuccessful\n The co ordintes of the drone are: X-"+x+" , Y-"+y+"\nThe cordinates of the missile launched are: X- "+xA+" , Y-"+yA+"\nThe boundaries are: X-"+xP+", Y-"+yP);
            }else{
                JOptionPane.showMessageDialog(rootPane, "Attack Successful\n The co ordintes of the drone are: X-"+x+" , Y-"+y+"\nThe cordinates of the missile launched are: X- "+xA+" , Y-"+yA+"\nThe boundaries are: X-"+xP+", Y-"+yP);
            }
        }else if((file.equalsIgnoreCase("Up.png") )){
            if(y+2<yP && x>=2){
                JOptionPane.showMessageDialog(rootPane, "Attack Successful\n The co ordintes of the drone are: X-"+x+" , Y-"+y+"\nThe cordinates of the missile launched are: X- "+xA+" , Y-"+yA+"\nThe boundaries are: X-"+xP+", Y-"+yP);
            }else{
                JOptionPane.showMessageDialog(rootPane, "Attack Unsuccessful\n The co ordintes of the drone are: X-"+x+" , Y-"+y+"\nThe cordinates of the missile launched are: X- "+xA+" , Y-"+yA+"\nThe boundaries are: X-"+xP+", Y-"+yP);
            }
        }else if((file.equalsIgnoreCase("Down.png"))){
            if(x+2<xP && y>=0){
               JOptionPane.showMessageDialog(rootPane, "Attack Successful\n The co ordintes of the drone are: X-"+x+" , Y-"+y+"\nThe cordinates of the missile launched are: X- "+xA+" , Y-"+yA+"\nThe boundaries are: X-"+xP+", Y-"+yP);
            }else{
                JOptionPane.showMessageDialog(rootPane, "Attack Unsuccessful\n The co ordintes of the drone are: X-"+x+" , Y-"+y+"\nThe cordinates of the missile launched are: X- "+xA+" , Y-"+yA+"\nThe boundaries are: X-"+xP+", Y-"+yP);
            }
        }
    }//GEN-LAST:event_AttackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ToyDroneInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ToyDroneInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ToyDroneInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ToyDroneInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ToyDroneInterface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Attack;
    private javax.swing.JButton Left;
    private javax.swing.JButton Move;
    private javax.swing.JButton Place;
    private javax.swing.JButton Report;
    private javax.swing.JButton Right;
    private javax.swing.JPanel area;
    private javax.swing.JLabel drone;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
